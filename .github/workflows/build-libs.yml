name: Build libs

on:
  # Enable manual run
  workflow_dispatch:

jobs:
  build-libs:
    runs-on: ${{ matrix.os }}
    name: Build libs on ${{ matrix.name }} (${{ matrix.mode }}) ${{ matrix.toolset }}
    strategy:
      matrix:
        include:
        - os: windows-2022
          name: Windows 2022
          target: Windows
          mode: release
          toolset: clang

        - os: windows-2022
          name: Windows 2022
          target: Windows
          mode: debug
          toolset: clang

        - os: windows-2022
          name: Windows 2022
          target: Windows
          mode: release
          toolset: msvc

        - os: windows-2022
          name: Windows 2022
          target: Windows
          mode: debug
          toolset: msvc
        #- os: ubuntu-22.04
        #  name: Ubuntu 22.04
        #- os: macos-12
        #  name: macOS 12
        #  target: macOS
        - os: ubuntu-22.04
          name: FreeBSD 13.2
          mode: release
          target: FreeBSD
          toolset: clang

        - os: ubuntu-22.04
          name: FreeBSD 13.2
          mode: debug
          target: FreeBSD
          toolset: clang

    steps:
    - uses: actions/checkout@v4.1.1
      name: Checkout
      with:
        submodules: true

    - name: Create folder
      run: |
        mkdir -p Libs/include

    - name: Add MSBuild to PATH
      if: matrix.target == 'Windows'
      uses: microsoft/setup-msbuild@v2
      with:
          msbuild-architecture: x86

    - name: Generate project
      if: matrix.target == 'Windows'
      shell: cmd
      run: |
        Tools\Windows\premake5 vs2022

    - name: Build Libs
      if: matrix.target == 'FreeBSD' && matrix.mode =='release'
      uses: cross-platform-actions/action@v0.23.0
      with:
        operating_system: freebsd
        architecture: x86-64
        version: '13.2'
        shell: bash
        image_url: https://github.com/MetekGame/freebsd-builder/releases/download/v0.0.2/freebsd-13.2-x86-64.qcow2
        run: |
            premake5 gmake2
            gmake config=release_clang -j4

    - name: Build Libs
      if: matrix.target == 'FreeBSD' && matrix.mode == 'debug'
      uses: cross-platform-actions/action@v0.23.0
      with:
        operating_system: freebsd
        architecture: x86-64
        version: '13.2'
        shell: bash
        image_url: https://github.com/MetekGame/freebsd-builder/releases/download/v0.0.2/freebsd-13.2-x86-64.qcow2
        run: |
            premake5 gmake2
            gmake config=debug_clang -j4

    - name: Build Libs
      if: matrix.target == 'Windows' && matrix.mode == 'debug' && matrix.toolset == 'clang'
      run: msbuild . /m /p:Configuration=Debug Clang

    - name: Build Libs
      if: matrix.target == 'Windows' && matrix.mode == 'debug' && matrix.toolset == 'msvc'
      run: msbuild . /m /p:Configuration=Debug MSVC

    - name: Build Libs
      if: matrix.target == 'Windows' && matrix.mode == 'release' && matrix.toolset == 'clang'
      run: msbuild . /m /p:Configuration=Release Clang

    - name: Build Libs
      if: matrix.target == 'Windows' && matrix.mode == 'debug' && matrix.toolset == 'msvc'
      run: msbuild . /m /p:Configuration=Release MSVC

    - uses: actions/upload-artifact@v4.3.1
      with:
        name: Libs_${{ matrix.name }}_${{ matrix.mode }}_${{ matrix.toolset }}
        path: |
          Libs

  publish_release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [ build-libs ]
    permissions:
      contents: write
      id-token: write
      deployments: write
    steps:
      - uses: actions/download-artifact@v4.1.4
      - name: Get current date
        id: date
        run: |
          echo "dateTime=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d_%H_%M_%S')" >> $GITHUB_OUTPUT
      - name: Run Script
        shell: bash
        run: |
              echo "# Libs " > "release.md"
              echo "" >> "release.md"
              for dir in */; do
                dir=${dir%/}
                zip_file="$dir.zip"
                zip -r "$zip_file" "$dir"/*
                sha256sum_value=$(sha256sum "$zip_file" | awk '{print $1}')
                echo "### $zip_file" >> "release.md"
                echo "SHA-256: $sha256sum_value" >> "release.md"
                echo "" >> "release.md"
              done
      - name: Display structure of downloaded files
        run: ls -R
      # - uses: ncipollo/release-action@v1.14.0
      #   with:
      #     name: "Libs - ${{ steps.date.outputs.dateTime }}"
      #     tag: "${{ steps.date.outputs.date }}"
      #     artifacts: "*.zip"
      #     bodyFile: "release.md"