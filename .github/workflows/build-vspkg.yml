name: Build libs vcpkg

on:
  # Enable manual run
  workflow_dispatch:

jobs:
  build-libs:
    runs-on: ${{ matrix.os }}
    name: Build libs on ${{ matrix.name }} ${{ matrix.platform }} ${{ matrix.configuration }}
    strategy:
      matrix:
        include:
        # - os: windows-2022
        #   name: Windows 2022
        #   target: Windows
        #   configuration: Release
        #   platform: Clang

        # - os: windows-2022
        #   name: Windows 2022
        #   target: Windows
        #   configuration: Debug
        #   platform: Clang

        - os: windows-2022
          name: Windows 2022
          target: Windows
          configuration: Release
          platform: MSVC

        - os: windows-2022
          name: Windows 2022
          target: Windows
          configuration: Debug
          platform: MSVC

        #- os: ubuntu-22.04
        #  name: Ubuntu 22.04
        #- os: macos-12
        #  name: macOS 12
        #  target: macOS
        - os: ubuntu-22.04
          name: FreeBSD 13.2
          target: FreeBSD
          configuration: Release
          platform: clang

        - os: ubuntu-22.04
          name: FreeBSD 13.2
          target: FreeBSD
          configuration: Debug
          platform: clang

    steps:
    # - uses: actions/checkout@v4.2.2
    #   name: Checkout
    #   with:
    #     submodules: true

    - name: Checkout vcpkg repo
      uses: actions/checkout@v4.2.2
      with:
        repository: Microsoft/vcpkg
        path: vcpkg

    - name: Install packages
      if: matrix.target == 'Windows'
      run: |
       cd vcpkg
       ./bootstrap-vcpkg.bat -disableMetrics
       ./vcpkg.exe install cryptopp:x86-windows-static fmt:x86-windows-static zlib:x86-windows-static lzo:x86-windows-static libjpeg-turbo:x86-windows-static libpng:x86-windows-static devil:x86-windows-static libwebp:x86-windows-static --x-install-root=../Libs

    - name: Build Libs 
      if: ${{ matrix.target == 'FreeBSD' }}
      uses: cross-platform-actions/action@v0.25.0
      with:
        operating_system: freebsd
        architecture: x86-64
        version: '13.2'
        shell: bash
        image_url: https://github.com/MetekGame/freebsd-builder/releases/download/v0.0.3/freebsd-13.2-x86-64.qcow2
        run: |
            sudo pkg install --yes zip unzip cmake ninja
            cd vcpkg
            chmod +x bootstrap-vcpkg.sh
            ./bootstrap-vcpkg.sh -disableMetrics
            ./vcpkg.exe install cryptopp:x86-freebsd-static fmt:x86-freebsd-static zlib:x86-freebsd-static lzo:x86-freebsd-static libjpeg-turbo:x86-freebsd-static libpng:x86-freebsd-static devil:x86-freebsd-static libwebp:x86-freebsd-static --x-install-root=../Libs

    - uses: actions/upload-artifact@v4.3.3
      with:
        name: Libs_${{ matrix.target }}_${{ matrix.platform }}_${{ matrix.configuration }}
        path: |
          Libs

#   publish_release:
#     name: Publish release
#     runs-on: ubuntu-latest
#     needs: [ build-libs ]
#     permissions:
#       contents: write
#       id-token: write
#       deployments: write
#     steps:
#       - uses: actions/download-artifact@v4.1.7

#       - name: Get current date
#         id: date
#         run: |
#           echo "dateTime=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
#           echo "date=$(date +'%Y-%m-%d_%H_%M_%S')" >> $GITHUB_OUTPUT

#       - name: Run Script
#         shell: bash
#         run: |
#               echo "# Libs " > "release.md"
#               echo "" >> "release.md"
#               for dir in */; do
#                 dir=${dir%/}
#                 zip_file="$dir.zip"
#                 cd "$dir"
#                 zip -r ../"$zip_file" *
#                 cd ..
#                 sha256sum_value=$(sha256sum "$zip_file" | awk '{print $1}')
#                 echo "### $zip_file" >> "release.md"
#                 echo "SHA-256: $sha256sum_value" >> "release.md"
#                 echo "" >> "release.md"
#               done

#       - name: Display structure of downloaded files
#         run: ls -R

#       - uses: ncipollo/release-action@v1.14.0
#         with:
#           name: "Libs - ${{ steps.date.outputs.dateTime }}"
#           tag: "${{ steps.date.outputs.date }}"
#           artifacts: "*.zip"
#           bodyFile: "release.md"